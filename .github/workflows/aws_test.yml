name: Test

on: 
  pull_request: {}
  # push:
  #   branches: main
  #   tags: "*"

env:
  AWS_ENDPOINT_URL: http://localhost:4566
  AWS_DEFAULT_REGION: ap-northeast-1

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3

      - name: nektos/act specific settings
        if: ${{ env.ACT }}
        run: |
          sudo apt-get update &&
          apt-get install -y docker-compose
          docker --version
          docker-compose -v

      # - name: Configure AWS
      #   run: |
      #     export AWS_ROLE_ARN=arn:aws:iam::138554541732:role/GithubOidcDeployRole-Role-1UWY7UQA5DR69
      #     export AWS_WEB_IDENTITY_TOKEN_FILE=/tmp/awscreds
      #     export AWS_DEFAULT_REGION=ap-northeast-1

      #     echo AWS_WEB_IDENTITY_TOKEN_FILE=$AWS_WEB_IDENTITY_TOKEN_FILE >> $GITHUB_ENV
      #     echo AWS_ROLE_ARN=$AWS_ROLE_ARN >> $GITHUB_ENV
      #     echo AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION >> $GITHUB_ENV

      #     curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL" | jq -r '.value' > $AWS_WEB_IDENTITY_TOKEN_FILE

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9.14

      - run: |
          pip install pipenv
          pipenv install --dev
          docker pull --quiet localstack/localstack:latest
          pipenv run devtools start-localstack --background
          aws --aws-secret-access-key=test --aws-access-key-id=test --endpoint_url=$AWS_ENDPOINT_URL sts get-caller-identity

      - name: serverless deploy
        uses: serverless/github-action@v3.1
        with:
          args: deploy
